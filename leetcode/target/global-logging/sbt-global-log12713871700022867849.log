[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.3 (Oracle Corporation Java 20.0.2)
[debug] Load.defaultLoad until apply took 72.8225ms
[debug]           Load.loadUnit: plugins took 64.6814ms
[debug]           Load.loadUnit: defsScala took 0.2928ms
[debug] [Loading] Scanning directory C:\Users\SBS\Desktop\ProblemSolvingScala\leetcode\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\SBS\Desktop\ProblemSolvingScala\leetcode\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 16.039 ms
[debug]               Load.resolveProject(leetcode-build) took 45.4864ms
[debug]             Load.loadTransitive: finalizeProject(Project(id leetcode-build, base: C:\Users\SBS\Desktop\ProblemSolvingScala\leetcode\project, plugins: List(<none>))) took 79.4842ms
[debug] [Loading] Done in C:\Users\SBS\Desktop\ProblemSolvingScala\leetcode\project, returning: (leetcode-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 103.1395ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.348ms
[debug]         Load.loadUnit(file:/C:/Users/SBS/Desktop/ProblemSolvingScala/leetcode/project/, ...) took 174.927ms
[debug]       Load.apply: load took 324.079ms
[debug]       Load.apply: resolveProjects took 3.832ms
[debug]       Load.apply: finalTransforms took 44.2139ms
[debug]       Load.apply: config.delegates took 5.7179ms
[debug]       Load.apply: Def.make(settings)... took 302.3356ms
[debug]       Load.apply: structureIndex took 66.1638ms
[debug]       Load.apply: mkStreams took 1.213ms
[info] loading project definition from C:\Users\SBS\Desktop\ProblemSolvingScala\leetcode\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1289.8355ms
[debug]     Load.loadUnit: defsScala took 0.0032ms
[debug] [Loading] Scanning directory C:\Users\SBS\Desktop\ProblemSolvingScala\leetcode
[debug]       Load.loadUnit: mkEval took 3.3949ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.1889 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 2.7447ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\SBS\Desktop\ProblemSolvingScala\leetcode, plugins: List(<none>))) took 5.7214ms
[debug] [Loading] Done in C:\Users\SBS\Desktop\ProblemSolvingScala\leetcode, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 123.3441ms
[debug]     Load.loadUnit: cleanEvalClasses took 8.8185ms
[debug]   Load.loadUnit(file:/C:/Users/SBS/Desktop/ProblemSolvingScala/leetcode/, ...) took 1423.59ms
[debug] Load.apply: load took 1439.0082ms
[debug] Load.apply: resolveProjects took 0.3297ms
[debug] Load.apply: finalTransforms took 9.2338ms
[debug] Load.apply: config.delegates took 0.3309ms
[debug] Load.apply: Def.make(settings)... took 47.9995ms
[debug] Load.apply: structureIndex took 21.1309ms
[debug] Load.apply: mkStreams took 0.0022ms
[info] set current project to leetcode (in build file:/C:/Users/SBS/Desktop/ProblemSolvingScala/leetcode/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-592b19530745fbb4464b
[debug] Writing bsp connection file
[info] started sbt server
